#!/bin/bash

ENTETE=" 
        ---------------------------------- 
        |   Programme 'emprisonnement'   | 
        |--------------------------------|
        |   nothus - août 2019 (0.0.1)   |
        ---------------------------------- 
"

nettoyer () { 
    if  [ "$VERBEUX" == true ] 
        then 
           clear  
    fi 
}

afficher () { 
    if  [ "$VERBEUX" == true ] 
        then 
            echo -e "$1" 
    fi 
}

afficher_ligne () { 
    afficher "" 
}

afficher_titre () { 
    afficher "\033[36m$1\033[0m" 
} 

afficher_demande () { 
    afficher "\033[33m[demande]     $1\033[0m" 
} 

afficher_info () { 
    afficher "\033[34m[info]        $1\033[0m" 
} 

afficher_reussite () { 
    afficher "\033[32m[réussite]    $1\033[0m" 
}

afficher_echec () { 
    afficher "\033[31m[échec]       $1\033[0m" 
} 

questionner_ouinon () { 
    if [ "$VERBEUX" == false ] 
        then 
            return 0
        else 
            afficher_demande "$1" 
            afficher_info "o / oui ou n / non" 
            read reponse
            reponse=`echo $reponse | tr "[a-z]" "[A-Z]"` 
            retour=2
            if [[  $reponse == "O" || $reponse == "OUI" ]] 
            then
                retour=0
            elif [[ $reponse == "N" || $reponse == "NON" ]]
            then 
                retour=1
            fi 
            return $retour 
    fi 
} 

item_supprimer () { 
    afficher_info "ouverture du dossier '$1'..." 
    for item in $(ls "$1") 
        do 
            local chemin="$1/$item"
            mountpoint -q $chemin
            if [ $? == 0 ]
                then
                    afficher_info "démontage du montage '$item'..." 
                    sudo umount -fl $item 
                else 
                    if [ -d $item ] 
                        then 
                            afficher_info "demande du parcours du dossier '$item'..." 
                            item_supprimer $item 
                        else
                            afficher_info "suppression du fichier '$item'..." 
                            sudo sudo rm -rf $item
                    fi 
            fi 
        done 
    afficher_info "suppression du dossier '$1'..." 
    sudo sudo rm -rf "$1" 
    return 0 
} 

chroot_supprimer () { 
    afficher_reussite "(début) démarrage de la suppression" 
    item_supprimer $DOSSIERCIBLE 
    afficher_reussite "(fin) fin de la suppression" 
} 

actionner_aider () { 
    VERBEUX=true 
    afficher_ligne 
    afficher_titre "> Afficher l'aide'" 
    echo -e " 

    [0] \033[45mInformation importante\033[0m 

        Sans précision sur le mode verbeux ou non, par défaut, toutes 
        les opérations seront acceptées sans demande de confirmation. 

    [1] \033[45mCas d'usage\033[0m

        $0 [-a 'action'] [-d 'dossier_cible'] [-c 'commandes_cibles'] [-v]
        ... où 'action' est l'action à mener 
            - 'aider' (par défaut), 
            - 'automatiser', 
            - 'creer', 
            - 'supprimer', 
            - 'rentrer' [-s 'commande'], 
            - 'credit' 
        ... où 'commandes_cibles' est la liste des commandes supplémentaires 
        à rendre disponibles ('bash env ls cat more groups' par défaut) 
        ... où 'dossier_cible' est le dossier d'emprisonnement 
        ... où l'argument '-v' est le mode verbeux (mode 'log') 
        ... où 'commande' peut être une commande Bash ou un script à emprisonner 

    [2] \033[45mIntérêt\033[0m

        Ce programme produira une prison dédiée à un environnement contrôlé. 
        En dehors des actions d'aide et d'affichage du crédit, les droits 
        'root' sont nécessaires 

    [2] \033[45mCrédit et version\033[0m

        Vous retrouverez ces informations en lançant le programme avec le verbe 
        d'action 'credit' 
    " 
} 

actionner_crediter () { 
    VERBEUX=true 
    afficher_ligne 
    afficher_titre "> Afficher les crédits" 
    echo -e " 
    [1] \033[45mVersion\033[0m

        0.0.1

    [2] \033[45mAuteur\033[0m

        Julien Garderon, août 2019 

    [2] \033[45mLicence\033[0m

        GNU GPL 3+ (monde) ou CeCILL 2+ (France) 
    " 
} 

actionner_suppression () { 
    afficher_ligne 
    afficher_titre "> Suppression de la prison"
    afficher_ligne 
    sudo echo $(afficher_reussite "Vous êtes reconnu avec des droits 'root'.") 
    afficher_ligne 
    mountpoint -q "$DOSSIERCIBLE"
    if [ $? == 0 ]
        then 
            afficher_echec "Impossible de supprimer une prison sur un point de montage." 
            return 1 
        else
            if [ -d "$DOSSIERCIBLE" ] 
                then 
                    QUESTION="'$DOSSIERCIBLE' existe. Confirmez-vous son entière suppression ?" 
                    reponse=2
                    while [ $reponse -eq 2 ]
                        do 
                            questionner_ouinon "$QUESTION" 
                            reponse=$? 
                        done 
                    afficher_ligne 
                    if [ $reponse -eq 0 ]
                        then 
                            chroot_supprimer 
                            return 0
                        elif [ $reponse -eq 1 ]
                            then 
                                afficher_reussite "L'action de suppression a été annulée." 
                                return 0
                    fi 
                else 
                    afficher_echec "Aucun dossier cible correct fourni." 
                    return 1
            fi 
    fi 
} 

actionner_rentrer () { 
    afficher_ligne 
    afficher_titre "> Rentrée dans la prison" 
    afficher_ligne 
    sudo echo $(afficher_reussite "Vous êtes reconnu avec des droits 'root'.") 
    afficher_ligne 
    if [ "$COMMANDECHROOT" != false ] 
        then 
            afficher_info "L'ouverture du 'chroot' se fait avec '$COMMANDECHROOT'" 
    fi 
    if [ -d "$DOSSIERCIBLE" ] 
        then 
            QUESTION="'$DOSSIERCIBLE' existe. Confirmez-vous vouloir vous emprisonner ?" 
            reponse=2
            while [ $reponse -eq 2 ]
                do 
                    questionner_ouinon "$QUESTION" 
                    reponse=$? 
                done 
            afficher_ligne 
            if [ $reponse -eq 0 ]
                then 
                    echo -e "\033[36m" 
                    if [ "$COMMANDECHROOT" == false ] 
                        then 
                            afficher_info "Vous entrez désormais en environnement 'chrooté' ('exit' pour sortir)." 
                            sudo chroot $DOSSIERCIBLE
                        else 
                            sudo chroot $DOSSIERCIBLE $COMMANDECHROOT 
                    fi 
                    echo -e "\033[0m" 
                    return 0
                elif [ $reponse -eq 1 ]
                    then 
                        afficher_reussite "L'emprisonnement a été annulé." 
                        return 0
            fi 
        else 
            afficher_echec "Aucun dossier cible correct fourni." 
            return 1 
    fi 
} 

chroot_creer_1 () { 
    afficher_reussite "création du dossier racine" 
    mkdir -p $DOSSIERCIBLE > /dev/null 2>&1
    pushd $DOSSIERCIBLE > /dev/null 2>&1
    DOSSIERCIBLE=$(pwd)
    popd > /dev/null 2>&1
} 

chroot_creer_2 () { 
    afficher_reussite "création des références de commandes" 
    for item in $COMMANDESCIBLES
        do 
            besoins=$(whereis -b $item | cut -f2 -d":")
            for besoin in $besoins
                do 
                    mkdir -p $DOSSIERCIBLE`dirname $besoin` > /dev/null 2>&1
                    cp -R -L "$besoin" $DOSSIERCIBLE`dirname $besoin`
                    for f in `ldd $besoin 2>/dev/null | cut -f2 -d ">" | cut -f1 -d "(" `
                    do
                        if [[ -f $f || -h $f ]];then
                           mkdir -p $DOSSIERCIBLE`dirname $f` > /dev/null 2>&1
                           cp -R -L "$f" $DOSSIERCIBLE`dirname $f`
                        fi
                    done
                done
        done
} 

chroot_creer_3 () { 
    afficher_reussite "création des points de montage et dossiers spéciaux" 
    mkdir $DOSSIERCIBLE/home 
    mkdir $DOSSIERCIBLE/dev
    sudo mknod $DOSSIERCIBLE/dev/null c 1 3
    mkdir $DOSSIERCIBLE/proc
    sudo mount --bind /proc $DOSSIERCIBLE/proc
    mkdir $DOSSIERCIBLE/sys
    sudo mount -t sysfs sys $DOSSIERCIBLE/sys
    sudo mknod -m 0444 $DOSSIERCIBLE/dev/random c 1 8
    sudo mknod -m 0444 $DOSSIERCIBLE/dev/urandom c 1 9
}

chroot_creer () { 
    afficher_reussite "(début) démarrage de la création" 
    chroot_creer_1 
    chroot_creer_2 
    chroot_creer_3 
    afficher_reussite "(fin) démarrage de la création" 
} 

actionner_creer () { 
    afficher_ligne 
    afficher_titre "> Création de la prison" 
    afficher_ligne 
    sudo echo $(afficher_reussite "Vous êtes reconnu avec des droits 'root'.") 
    afficher_ligne 
    if [ "$DOSSIERCIBLE" != false ] 
        then 
            if [ -d "$DOSSIERCIBLE" ] 
                then 
                    afficher_echec "Un dossier du même nom existe déjà." 
                    return 1 
                elif [ -f "$DOSSIERCIBLE" ] 
                    then 
                        afficher_echec "Un fichier du même nom existe déjà."
                        return 1 
            fi 
            QUESTION="Confirmez-vous la création de la prison '$DOSSIERCIBLE' ?" 
            reponse=2
            while [ $reponse -eq 2 ]
                do 
                    questionner_ouinon "$QUESTION" 
                    reponse=$? 
                done 
            afficher_ligne 
            if [ $reponse -eq 0 ]
                then 
                    chroot_creer 
                    return 0
                elif [ $reponse -eq 1 ]
                    then 
                        afficher_reussite "La création de la prison a été annulée." 
                        return 0
            fi 
        else 
            afficher_echec "Aucun dossier cible correct fourni." 
            return 1 
    fi 
} 

### --- --- --- 
### --- --- --- valeurs par défaut 
### --- --- --- 

ACTION="aider"
COMMANDESCIBLES="bash env ls cat more groups"
DOSSIERCIBLE=false 
VERBEUX=false 
COMMANDECHROOT=false

### --- --- --- 
### --- --- --- récupération des options 
### --- --- --- 

while getopts "a:c:d:vs:" OPTNAME 
    do
        case $OPTNAME in
            a) ACTION="$OPTARG" ;; 
            c) COMMANDESCIBLES="$COMMANDESCIBLES $OPTARG" ;; 
            d) DOSSIERCIBLE="$OPTARG" ;; 
            v) VERBEUX=true ;; 
            s) COMMANDECHROOT="$OPTARG" ;; 
        esac
    done

### --- --- --- 
### --- --- --- démarrage 
### --- --- --- 

nettoyer

afficher_titre "$ENTETE" 

afficher_titre "> Mode verbeux : les variables globales" 
afficher_ligne 
afficher_info "ACTION = $ACTION" 
afficher_info "COMMANDESCIBLES = $COMMANDESCIBLES" 
afficher_info "DOSSIERCIBLE = $DOSSIERCIBLE" 
afficher_info "VERBEUX = $VERBEUX" 

sortie=0
case $ACTION in
    supprimer) 
        actionner_suppression 
        sortie=$?
    ;; 
    creer) 
        actionner_creer 
        sortie=$?
        ;; 
    rentrer) 
        actionner_rentrer 
        sortie=$?
        ;; 
    aider) 
        actionner_aider 
        sortie=0
    ;; 
    credit) 
        actionner_crediter 
        sortie=0
    ;; 
esac 

afficher_ligne 

exit $sortie 


